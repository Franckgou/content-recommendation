# Movie Recommendation App

A full-stack application that provides personalized movie recommendations using machine learning.

## Project Structure

```plaintext
content-recommendation/
├── backend/
│   ├── config/
│   │   ├── db.config.js        # Database configuration
│   │   └── auth.config.js      # Authentication configuration
│   ├── controllers/
│   │   ├── auth.controller.js  # Authentication logic
│   │   ├── movie.controller.js # Movie-related logic
│   │   └── user.controller.js  # User-related logic
│   ├── models/
│   │   ├── user.model.js      # User model
│   │   └── movie.model.js     # Movie model
│   ├── routes/
│   │   ├── auth.routes.js     # Authentication routes
│   │   ├── movie.routes.js    # Movie routes
│   │   └── user.routes.js     # User routes
│   └── server.js              # Main backend entry point
├── frontend/
│   ├── public/
│   │   ├── index.html
│   │   └── assets/
│   │       └── images/
│   ├── src/
│   │   ├── components/
│   │   │   ├── auth/
│   │   │   │   ├── Login.js
│   │   │   │   └── Signup.js
│   │   │   ├── movies/
│   │   │   │   ├── MovieCard.js
│   │   │   │   └── MovieList.js
│   │   │   └── profile/
│   │   │       └── Profile.js
│   │   ├── services/
│   │   │   ├── auth.service.js
│   │   │   └── movie.service.js
│   │   ├── styles/
│   │   │   └── components/
│   │   ├── App.js
│   │   └── index.js
│   └── package.json
├── ml/
│   ├── data/
│   │   └── movies.csv
│   ├── models/
│   │   └── recommendation_model.pkl
│   ├── get_recommendations.py
│   ├── import_movielens.py
│   └── train_model.py
├── alembic/
│   ├── versions/
│   └── alembic.ini
├── .env.example
├── .gitignore
├── README.md
├── requirements.txt
└── package.json

Features
User authentication (signup/login)
Movie browsing and searching
Personalized movie recommendations
Like/dislike functionality
Watch later list
User profile management

Tech Stack
Frontend: React.js
Backend: Node.js, Express
Database: PostgreSQL
ORM: SQLAlchemy
Machine Learning: scikit-learn
Authentication: JWT

Getting Started
Prerequisites
Node.js (v14 or higher)
Python 3.8+
PostgreSQL

Installation:
   1. Clone the repository:
   git clone https://github.com/Franckgou/content-recommendation.git
   cd content-recommendation
```

2.Install dependencies

## Install backend dependencies

npm install

## Install frontend dependencies

cd frontend
npm install

1. Set up environment variables
   cp .env.example .env

## Edit .env with your configuration

<<<<<<< HEAD
2.Set up database
=======
2. Set up database
>>>>>>> 136a92af4507ae2ed745bd48ed5a0692a1f67526

## Run database migrations

alembic upgrade head

<<<<<<< HEAD
3.Start the application
=======
3. Start the application
>>>>>>> 136a92af4507ae2ed745bd48ed5a0692a1f67526

## From the root directory

npm start

## API Documentation

### Authentication Endpoints

POST /api/auth/signup - Register a new user
POST /api/auth/login - Login user

### Movie Endpoints

GET /api/movies - Get all movies
GET /api/movies/popular - Get popular movies
POST /api/movies/:id/like - Like a movie
POST /api/movies/:id/watch-later - Add to watch later

## Contributing

Fork the repository
Create your feature branch (git checkout -b feature/AmazingFeature)
Commit your changes (git commit -m 'Add some AmazingFeature')
Push to the branch (git push origin feature/AmazingFeature)
Open a Pull Request
